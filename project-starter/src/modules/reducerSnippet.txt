이름과 단축키를 변경해서 snippet 사용

"[이름]": {
  "prefix": "[단축키]",
  "body": [
    "import produce from 'immer';",
    "//import your data type",
    "",
    "// 1. Action Type",
    "const LOAD_DATA = '${TM_FILENAME_BASE}/LOAD_DATA';",
    "const ADD_DATA = '${TM_FILENAME_BASE}/ADD_DATA';",
    "const REMOVE_DATA = '${TM_FILENAME_BASE}/REMOVE_DATA';",
    "",
    "// 2. Action Creator",
    "// change type any to your data Type",
    "export const LoadDataAction = (data: any[]) => ({ type: LOAD_DATA, payload: data });",
    "export const AddDataAction = (data: any) => ({ type: ADD_DATA, payload: data });",
    "export const RemoveDataAction = (items: any[]) => ({ type: REMOVE_DATA, payload: items });",
    "",
    "// 3. return types",
    "export type ${TM_FILENAME_BASE}Actions = ReturnType<typeof LoadDataAction> | ReturnType<typeof AddDataAction> | ReturnType<typeof RemoveDataAction>;",
    "",
    "// 4.",
    "interface ${TM_FILENAME_BASE}Item { //extends data type",
    "    id: number;",
    "}",
    "// 5. State type",
    "export interface ${TM_FILENAME_BASE}State {",
    "    items: ${TM_FILENAME_BASE}Item[];  //any to your data Type",
    "}",
    "",
    "// 6. initial State",
    "const initialState: ${TM_FILENAME_BASE}State = {",
    "    items: []",
    "};",
    "",
    "// 6. reducer",
    "const ${TM_FILENAME_BASE}Reducer = (state: ${TM_FILENAME_BASE}State = initialState, action: ${TM_FILENAME_BASE}Actions): ${TM_FILENAME_BASE}State => {",
    "    switch (action.type) {",
    "        case LOAD_DATA: {",
    "            return produce(state, draft => { });",
    "        }",
    "        case ADD_DATA: {",
    "            return produce(state, draft => { });",
    "        }",
    "        case REMOVE_DATA: {",
    "            return produce(state, draft => { });",
    "        }",
    "        default: {",
    "            return produce(state, draft => { });",
    "        }",
    "    }",
    "}",
    "",
    "export default ${TM_FILENAME_BASE}Reducer;"
  ],
  "description": "[이름]"
}